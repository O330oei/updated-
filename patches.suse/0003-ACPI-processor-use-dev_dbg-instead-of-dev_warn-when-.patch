From 9c0a75473889b640bfd5cad9308321b5df14b8d5 Mon Sep 17 00:00:00 2001
From: Hanjun Guo <hanjun.guo@linaro.org>
Date: Wed, 26 Jul 2017 18:40:12 +0800
Subject: [PATCH 03/14] ACPI: processor: use dev_dbg() instead of dev_warn()
 when CPPC probe failed

Git-commit: 512bb03f4957b0ea6ebcd82f6d34147fc7f83128
Patch-mainline: v4.14-rc1
References: bsc#1084771

_CPC is a optinal object for processor device so it's
fine for processor devices in DSDT without CPPC data,
but when booting the system with CPPC enabled in the
kernel but without its support in the firmware, I got
lots of warnings on a 64 core system:

[    6.346016] acpi ACPI0007:00: CPPC data invalid or not present
[    6.346028] acpi ACPI0007:01: CPPC data invalid or not present
[    6.346039] acpi ACPI0007:02: CPPC data invalid or not present
[    6.346050] acpi ACPI0007:03: CPPC data invalid or not present
[    6.346063] acpi ACPI0007:04: CPPC data invalid or not present
...
[    6.346737] acpi ACPI0007:3f: CPPC data invalid or not present

This isn't much useful and a little bit noise, so
switch the dev_warn() to dev_dbg().

Signed-off-by: Hanjun Guo <hanjun.guo@linaro.org>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Signed-off-by: Mian Yousaf Kaukab <yousaf.kaukab@suse.com>
---
 drivers/acpi/processor_driver.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/acpi/processor_driver.c b/drivers/acpi/processor_driver.c
index 8697a82bd465..655168a15d04 100644
--- a/drivers/acpi/processor_driver.c
+++ b/drivers/acpi/processor_driver.c
@@ -237,7 +237,7 @@ static int __acpi_processor_start(struct acpi_device *device)
 
 	result = acpi_cppc_processor_probe(pr);
 	if (result && !IS_ENABLED(CONFIG_ACPI_CPU_FREQ_PSS))
-		dev_warn(&device->dev, "CPPC data invalid or not present\n");
+		dev_dbg(&device->dev, "CPPC data invalid or not present\n");
 
 	if (!cpuidle_get_driver() || cpuidle_get_driver() == &acpi_idle_driver)
 		acpi_processor_power_init(pr);
-- 
2.11.0

