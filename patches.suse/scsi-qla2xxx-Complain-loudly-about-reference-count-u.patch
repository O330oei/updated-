From: Bart Van Assche <bvanassche@acm.org>
Date: Wed, 17 Apr 2019 14:44:40 -0700
Subject: scsi: qla2xxx: Complain loudly about reference count underflow
Patch-mainline: v5.2-rc1
Git-commit: db4bf822c58cd2b4a6718c982ce48a5292f5cc6a
References: bsc#1123034 bsc#1131304 bsc#1127988

A reference count underflow is a severe bug. Hence complain loudly if a
reference count underflow happens.

Cc: Himanshu Madhani <hmadhani@marvell.com>
Cc: Giridhar Malavali <gmalavali@marvell.com>
Signed-off-by: Bart Van Assche <bvanassche@acm.org>
Acked-by: Himanshu Madhani <hmadhani@marvell.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Acked-by: Daniel Wagner <dwagner@suse.de>
---
 drivers/scsi/qla2xxx/qla_nvme.c |   15 +++++----------
 drivers/scsi/qla2xxx/qla_os.c   |   16 ++--------------
 2 files changed, 7 insertions(+), 24 deletions(-)

--- a/drivers/scsi/qla2xxx/qla_nvme.c
+++ b/drivers/scsi/qla2xxx/qla_nvme.c
@@ -131,11 +131,8 @@ static void qla_nvme_sp_ls_done(void *pt
 	struct nvmefc_ls_req   *fd;
 	struct nvme_private *priv;
 
-	if (atomic_read(&sp->ref_count) == 0) {
-		ql_log(ql_log_warn, sp->fcport->vha, 0x2123,
-		    "SP reference-count to ZERO on LS_done -- sp=%p.\n", sp);
+	if (WARN_ON_ONCE(atomic_read(&sp->ref_count) == 0))
 		return;
-	}
 
 	atomic_dec(&sp->ref_count);
 
@@ -160,6 +157,9 @@ static void qla_nvme_sp_done(void *ptr,
 	nvme = &sp->u.iocb_cmd;
 	fd = nvme->u.nvme.desc;
 
+	if (WARN_ON_ONCE(atomic_read(&sp->ref_count) == 0))
+		return;
+
 	atomic_dec(&sp->ref_count);
 
 	if (res == QLA_SUCCESS) {
@@ -199,13 +199,8 @@ static void qla_nvme_abort_work(struct w
 		return;
 	}
 
-	if (atomic_read(&sp->ref_count) == 0) {
-		WARN_ON(1);
-		ql_log(ql_log_info, fcport->vha, 0xffff,
-			"%s: command already aborted on sp: %p\n",
-			__func__, sp);
+	if (WARN_ON_ONCE(atomic_read(&sp->ref_count) == 0))
 		return;
-	}
 
 	rval = ha->isp_ops->abort_command(sp);
 
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@ -735,14 +735,8 @@ qla2x00_sp_compl(void *ptr, int res)
 	struct scsi_cmnd *cmd = GET_CMD_SP(sp);
 	struct completion *comp = sp->comp;
 
-	if (atomic_read(&sp->ref_count) == 0) {
-		ql_dbg(ql_dbg_io, sp->vha, 0x3015,
-		    "SP reference-count to ZERO -- sp=%p cmd=%p.\n",
-		    sp, GET_CMD_SP(sp));
-		if (ql2xextended_error_logging & ql_dbg_io)
-			WARN_ON(atomic_read(&sp->ref_count) == 0);
+	if (WARN_ON_ONCE(atomic_read(&sp->ref_count) == 0))
 		return;
-	}
 
 	atomic_dec(&sp->ref_count);
 
@@ -846,14 +840,8 @@ qla2xxx_qpair_sp_compl(void *ptr, int re
 	struct scsi_cmnd *cmd = GET_CMD_SP(sp);
 	struct completion *comp = sp->comp;
 
-	if (atomic_read(&sp->ref_count) == 0) {
-		ql_dbg(ql_dbg_io, sp->fcport->vha, 0x3079,
-		    "SP reference-count to ZERO -- sp=%p cmd=%p.\n",
-		    sp, GET_CMD_SP(sp));
-		if (ql2xextended_error_logging & ql_dbg_io)
-			WARN_ON(atomic_read(&sp->ref_count) == 0);
+	if (WARN_ON_ONCE(atomic_read(&sp->ref_count) == 0))
 		return;
-	}
 
 	atomic_dec(&sp->ref_count);
 
